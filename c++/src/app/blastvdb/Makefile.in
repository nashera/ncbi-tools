# $Id: Makefile.in 640879 2021-11-19 17:30:53Z fongah2 $

APP_PROJ = blastn_vdb tblastn_vdb blast_vdb_cmd blast_formatter_vdb

REQUIRES = objects algo app VDB

srcdir = @srcdir@
include @builddir@/Makefile.meta

.PHONY: all $(APP_PROJ)

blastn_vdb: 
	${MAKE} ${MFLAGS} -f Makefile.blastn_vdb_app

tblastn_vdb: 
	${MAKE} ${MFLAGS} -f Makefile.tblastn_vdb_app

blast_vdb_cmd:
	${MAKE} ${MFLAGS} -f Makefile.blast_vdb_cmd_app

blast_formatter_vdb:
	${MAKE} ${MFLAGS} -f Makefile.blast_formatter_vdb_app

# Example meta-makefile; uncomment and fill out whichever of these
# apply.  (Built in the following order.)

## User projects (totally custom makefiles).  *USR_PROJ settings are for
## internal tasks such as source generation, whereas *UNIX_PROJ are for
## targets that are interesting enough in their own right to warrant
## explicit coverage in Makefile.flat.
# USR_PROJ =
# UNIX_USR_PROJ =
# UNIX_PROJ =
# EXPENDABLE_USR_PROJ =
# EXPENDABLE_UNIX_PROJ =

## Libraries to be built as usual.
# ASN_PROJ =
# DTD_PROJ =
# XSD_PROJ =
# LIB_PROJ =
# WSDL_PROJ =
# PROTOBUF_PROJ =
# EXPENDABLE_LIB_PROJ =

## Applications to be built as usual.
# APP_PROJ =
# EXPENDABLE_APP_PROJ =

## Subdirectories to traverse.
# SUB_PROJ =
# POTENTIAL_SUB_PROJ =
# EXPENDABLE_SUB_PROJ =

srcdir = @srcdir@
include @builddir@/Makefile.meta
